<?xml version="1.0" encoding="UTF-8"?> 
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
                http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         metadata-complete="true">
    <!-- metadata-complete="true" 忽略注解只由web.xml提供配置 -->
    
    <display-name>test_javaapi</display-name>
    <welcome-file-list>  
	    <welcome-file>index.html</welcome-file>  
	</welcome-file-list>  
    
    
    <error-page>
        <error-code>404</error-code>
        <location>/error/notfound.html</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/error/secret.html</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.IOException</exception-type>
        <location>/error/ioexception.html</location>
    </error-page>
    <error-page>
        <location>/error/anyerror.html</location>
    </error-page>
      
    
	<!-- <servlet>  
		<servlet-name>shoppingCart</servlet-name>  
		<servlet-class>com.xhc.test.javaapi.servlet.ShoppingCart</servlet-class>  
        <load-on-startup>1</load-on-startup>  
	</servlet>  
	<servlet-mapping>  
		<servlet-name>shoppingCart</servlet-name>  
        <url-pattern>/shoppingCart</url-pattern>  
    </servlet-mapping>   -->
  
    <servlet>  
        <servlet-name>cookieCutter</servlet-name>  
        <servlet-class>com.xhc.test.javaapi.servlet.CookieCutter</servlet-class>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>cookieCutter</servlet-name>  
        <url-pattern>/cookieCutter</url-pattern>  
    </servlet-mapping>
    <servlet>  
        <servlet-name>cecureHello</servlet-name>  
        <servlet-class>com.xhc.test.javaapi.servlet.SecureHelloClient</servlet-class>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>cecureHello</servlet-name>  
        <url-pattern>/secret/cecureHello</url-pattern>  
    </servlet-mapping>
    <servlet>  
        <servlet-name>mylogin</servlet-name>  
        <servlet-class>com.xhc.test.javaapi.servlet.MyLogin</servlet-class>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>mylogin</servlet-name>  
        <url-pattern>/login</url-pattern>  
    </servlet-mapping>
    
    
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secret documents</web-resource-name>
            <url-pattern>/secret/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>secretagent</role-name>
        </auth-constraint>
        <user-data-constraint>
            <!-- 
                NONE :不需要特殊传输 
                INTEGRAL ：发送数据使用的传输协议要保证数据不会被修改，接收端会使用数字签名等方法鉴别。但不要求在传输中加密或隐藏数据
                CONFIDENTIAL ：同INTEGRAL 但同时要求加密数据。
            -->
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <login-config>
        <!-- 
            BASIC: 使用弹出对话框输入用户名 密码
            DIGEST: BASIC变种,隐藏口令文本
            FORM: 使用表达发送用户名密码
            CLIENT-CERT: 客户端使用公钥证书，需要使用ssl等协议
         -->
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/login.html</form-login-page>
            <form-error-page>/login_error.html</form-error-page>
        </form-login-config>
    </login-config>
</web-app>
